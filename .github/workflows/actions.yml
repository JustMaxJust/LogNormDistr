name: LogNormDistr CI

on:
   push:
      branches: [ main, develop ]
   pull_request:
      branches: [ main, develop ]

jobs:
   validation:
      name: Validation
      runs-on: macos-latest
      steps:
         -  uses: actions/checkout@v3
         -  uses: gradle/wrapper-validation-action@v1

   build-test:
      name: Build test
      runs-on: macos-latest
      steps:
         -  uses: actions/checkout@v3
         -  uses: actions/setup-java@v3
            with:
               java-version: 18
               distribution: 'zulu'
         -  uses: gradle/gradle-build-action@v2
         -  run: ./gradlew build --stacktrace

   run-unit-tests:
      name: Unit tests
      runs-on: macos-latest
      steps:
         -  uses: actions/checkout@v3
         -  uses: actions/setup-java@v3
            with:
               java-version: 18
               distribution: 'zulu'
         -  uses: gradle/gradle-build-action@v2
         -  run: chmod +x gradlew
         -  run: ./gradlew test

   detekt:
      name: Detekt
      runs-on: macos-latest
      steps:
         -  uses: actions/checkout@v3
         -  uses: actions/setup-java@v3
            with:
               java-version: 18
               distribution: 'zulu'
         -  uses: gradle/gradle-build-action@v2
         -  run: ./gradlew detekt

   instrumentation-tests:
      name: Instrumentation tests
      runs-on: ${{ matrix.os }}
      timeout-minutes: 30
      strategy:
         fail-fast: false
         matrix:
            os: [ ubuntu-latest ]
            arch: [ x86_64 ]
            target: [ google_apis ]
            channel: [ stable ]
            api-level:
               - 26
               - 29
               - 30
               - 31
               - 34
            include:
               -  os: ubuntu-latest
                  arch: x86
                  api-level: 26
                  target: google_apis
                  channel: stable
               -  os: ubuntu-latest
                  arch: x86
                  api-level: 29
                  target: google_apis
                  channel: stable
               -  os: ubuntu-latest
                  arch: x86
                  api-level: 30
                  target: aosp_atd
                  channel: canary
               -  os: macos-latest
                  api-level: 31
                  target: google_apis
                  arch: x86_64
               -  os: ubuntu-latest
                  arch: x86_64
                  api-level: 34
                  target: aosp_atd
      steps:
         -  uses: actions/checkout@v3
         -  uses: actions/setup-java@v3
            with:
               java-version: 17
               distribution: 'zulu'
         -  uses: gradle/gradle-build-action@v2
         -  name: AVD cache
            uses: actions/cache@v3
            id: avd-cache
            with:
               path: |
                  ~/.android/avd/*
                  ~/.android/adb*
               key: avd-${{ matrix.api-level }}-${{ matrix.os }}-${{ matrix.target }}
         -  name: Create AVD and generate snapshot for caching
            if: steps.avd-cache.outputs.cache-hit != 'true'
            uses: reactivecircus/android-emulator-runner@v2
            with:
               api-level: ${{ matrix.api-level }}
               target: ${{ matrix.target }}
               arch: ${{ matrix.arch }}
               force-avd-creation: false
               emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-load
               disable-animations: false
               script: echo "Generated AVD snapshot for caching."
         -  name: Instrumentation Tests
            uses: reactivecircus/android-emulator-runner@v2
            with:
               api-level: ${{ matrix.api-level }}
               target: ${{ matrix.target }}
               arch: ${{ matrix.arch }}
               emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
               disable-animations: true
               script: |
                  touch emulator.log                    # create log file
                  chmod 777 emulator.log                # allow writing to log file
                  adb logcat >> emulator.log &          # pipe all logcat messages into log file as a background process
                  ./gradlew connectedDebugAndroidTest --scan
         -  name: Upload results
            if: ${{ always() }}
            uses: actions/upload-artifact@v3
            with:
               name: ${{ matrix.api-level }}-${{ matrix.arch }}-instrumentation-test-results
               path: |
                  emulator.log
                  ./**/build/reports/androidTests/connected/**